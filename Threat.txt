if game.Workspace:FindFirstChild('SeekMovingNewClone') then
    return
end

function LoadCustomInstance(url, Name)
    if not isfile(Name .. '.rbxm') then
        writefile(Name .. '.rbxm', game:HttpGet(url))
    end

    return game:GetObjects(getcustomasset(Name .. '.rbxm', true))[1]
end

local Rooms = game.Workspace.CurrentRooms

task.wait(1)

local ThreatModel = LoadCustomInstance(
    'https://github.com/localplayerr/Doors-stuff/raw/refs/heads/main/Mayhem%20mode%20recreate/Threat.rbxm',
    'Threat'
)
ThreatModel.Parent = game.Workspace

local Threat = ThreatModel.ThreatMoving
Threat.Anchored = true
Threat:SetAttribute('Paused', false)

local sound = Instance.new('Sound', game.Workspace)
sound.SoundId = 'rbxassetid://3359047385'
sound:Play()
sound.Volume = 2

local correction = Instance.new('ColorCorrectionEffect', game.Lighting)
correction.TintColor = Color3.fromRGB(0, 0, 255)
correction.Saturation = -1
game:GetService('TweenService')
    :Create(
        correction,
        TweenInfo.new(0.8),
        { TintColor = Color3.fromRGB(255, 0, 0) }
    )
    :Play()

Threat.CFrame = Rooms:GetChildren()[#Rooms:GetChildren()]
    :WaitForChild('RoomExit').CFrame

sound.Ended:Wait()
sound:Destroy()

task.wait(1)
game:GetService('TweenService')
    :Create(
        correction,
        TweenInfo.new(1.5),
        { TintColor = Color3.fromRGB(255, 0, 255) }
    )
    :Play()
task.wait(1)

function MoveTo(cframe, speed, model)
    local reached = false
    local connection
    connection = game:GetService('RunService').Stepped:Connect(function(_, step)
        if Threat:GetAttribute('Paused') == false then
            local pivot = model:GetPivot()
            local difference = (cframe.Position - pivot.Position)
            local unit = difference.Unit
            local magnitude = difference.Magnitude

            if magnitude > 0.1 then
                model:PivotTo(pivot + unit * math.min(step * speed, magnitude))
            else
                connection:Disconnect()
                reached = true
            end
        end
    end)
    repeat
        game:GetService('RunService').Stepped:Wait()
    until reached
end

task.spawn(function()
    while ThreatModel.Parent and task.wait() do
        local distance = (
            game.Players.LocalPlayer.Character.HumanoidRootPart.Position
            - Threat.Position
        ).magnitude
        if distance < 100 then
            require(
                game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game
            ).camShaker:ShakeOnce(
                2 / 100 * (100 - distance),
                20 / 100 * (100 - distance),
                0.1,
                1
            )
        end
        local ray = game.Workspace:Raycast(
            Threat.Position,
            (
                game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                - Threat.Position
            ).Unit * 50
        )
        if ray then
            if
                ray.Instance.Parent
                        == game.Players.LocalPlayer.Character
                    and game.Players.LocalPlayer.Character:GetAttribute(
                        'Hiding'
                    ) == false
                or ray.Instance.Parent.Parent
                        == game.Players.LocalPlayer.Character
                    and game.Players.LocalPlayer.Character:GetAttribute(
                        'Hiding'
                    ) == false
            then
                Threat:SetAttribute('Paused', true)
                local threatjump = Instance.new('Sound', game.Workspace)
                threatjump.SoundId = 'rbxassetid://7085879559'
                threatjump.Volume = 0.5
                local dislike =
                    Instance.new('DistortionSoundEffect', threatjump)
                dislike.Level = 0.75
                local equal = Instance.new('EqualizerSoundEffect', threatjump)
                equal.HighGain = 0
                equal.MidGain = -10
                equal.LowGain = -20
                local pitch = Instance.new('PitchShiftSoundEffect', threatjump)
                pitch.Octave = 1
                threatjump:Play()
                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored =
                    true
                for i = 1, #Threat:GetChildren(), 1 do
                    local obj = Threat:GetChildren()[i]
                    if obj then
                        if obj:IsA('Sound') then
                            obj.Volume = 0
                        end
                    end
                end
                local cf = game.workspace.currentCamera.CFrame.Position
                game:GetService('TweenService')
                    :Create(
                        game.Workspace.CurrentCamera,
                        TweenInfo.new(
                            0.7,
                            Enum.EasingStyle.Sine,
                            Enum.EasingDirection.Out
                        ),
                        {
                            CFrame = CFrame.lookAt(cf, Threat.Position),
                        }
                    )
                    :Play()
                task.wait(0.7)
                task.spawn(function()
                    while
                        game:GetService('RunService').RenderStepped:Wait()
                        and ThreatModel.Parent
                    do
                        game.Workspace.CurrentCamera.CFrame = CFrame.lookAt(
                            game.workspace.currentCamera.CFrame.Position,
                            Threat.Position
                        )
                    end
                end)
                task.wait(1)
                ThreatModel:Destroy()
                correction:Destroy()
                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored =
                    false
                game.Players.LocalPlayer.Character.Humanoid.Health = 0
                firesignal(
                    game.ReplicatedStorage.RemotesFolder.DeathHint.OnClientEvent,
                    {
                        'Oh... hello.',
                        'Not this place again...',
                        "Nevermind that... What'd you die to?",
                        'Ohâ€¦ the red thing.',
                        'It seems to get faster over time, so...',
                        'Maybe you could call it Threat?',
                        "Anyways, I hope you don't mind trying again. It would ne helpful.",
                    },
                    'Yellow'
                )
                game.ReplicatedStorage.GameStats['Player_' .. game.Players.LocalPlayer.Name].Total.DeathCause.Value =
                    'Threat'
            end
        end
    end
end)

task.spawn(function()
    while ThreatModel.Parent and task.wait(10) do
        correction.TintColor = Color3.fromRGB(125, 0, 0)
        game:GetService('TweenService')
            :Create(
                correction,
                TweenInfo.new(1.5),
                { TintColor = Color3.fromRGB(255, 0, 255) }
            )
            :Play()
    end
end)

for i = 1, 6 do
    for u = #Rooms:GetChildren(), 1, -1 do
        local Room = Rooms:GetChildren()[u]
        if Room then
            local WayPoints = Room:FindFirstChild('PathFindNodes')
            if WayPoints then
                WayPoints = WayPoints:GetChildren()
                table.sort(WayPoints, function(a, b)
                    return tonumber(a.Name) > tonumber(b.Name)
                end)
                for i = 1, #WayPoints, 1 do
                    local Point = WayPoints[i]
                    if Point then
                        MoveTo(Point.CFrame + Vector3.new(0, 4, 0), 120, Threat)
                    end
                end
            end
            if Room:FindFirstChild('RoomExit') then
                MoveTo(Room.RoomEntrance.CFrame, 120, Threat)
            end
        end
    end
    for u = 1, #Rooms:GetChildren(), 1 do
        local Room = Rooms:GetChildren()[u]
        if Room then
            local WayPoints = Room:FindFirstChild('PathFindNodes')
            if WayPoints then
                WayPoints = WayPoints:GetChildren()
                for i = 1, #WayPoints, 1 do
                    local Point = WayPoints[i]
                    if Point then
                        MoveTo(Point.CFrame + Vector3.new(0, 4, 0), 120, Threat)
                    end
                end
            end
            if Room:FindFirstChild('RoomExit') then
                MoveTo(Room.RoomExit.CFrame, 120, Threat)
            end
        end
    end
    task.wait(1)
end

ThreatModel:Destroy()

correction:Destroy()
